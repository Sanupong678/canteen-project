import mongoose from 'mongoose';
import dotenv from 'dotenv';
import EvaluationItem from '../models/EvaluationItem.js';
import connectDB from '../config/database.js';

// Load environment variables
dotenv.config();

// Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï order field ‡πÉ‡∏ô EvaluationItem collection
async function updateEvaluationItemOrder() {
  try {
    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï order field ‡πÉ‡∏ô EvaluationItem collection...');
    
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database
    await connectDB();
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• evaluation items ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const evaluationItems = await EvaluationItem.find().sort({ createdAt: 1 });
    console.log(`üìã ‡∏û‡∏ö evaluation items ${evaluationItems.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    let updatedCount = 0;
    
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï order field ‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    for (let i = 0; i < evaluationItems.length; i++) {
      const item = evaluationItems[i];
      const newOrder = i + 1;
      
      if (item.order !== newOrder) {
        item.order = newOrder;
        await item.save();
        console.log(`üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï item: ${item.title} -> Order: ${newOrder}`);
        updatedCount++;
      } else {
        console.log(`‚è≠Ô∏è  ‡∏Ç‡πâ‡∏≤‡∏° item: ${item.title} (Order: ${item.order} ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß)`);
      }
    }
    
    console.log('üéâ ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log(`üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:`);
    console.log(`   - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${updatedCount} items`);
    console.log(`   - ‡∏£‡∏ß‡∏°: ${evaluationItems.length} items`);
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database
    await mongoose.disconnect();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database');
  }
}

// Function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á order ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
async function previewEvaluationItemOrder() {
  try {
    console.log('üîç ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á order field ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï...');
    
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database
    await connectDB();
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• evaluation items ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const evaluationItems = await EvaluationItem.find().sort({ createdAt: 1 });
    console.log(`üìã ‡∏û‡∏ö evaluation items ${evaluationItems.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    
    console.log('\nüìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á order field ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:');
    console.log('='.repeat(80));
    
    evaluationItems.forEach((item, index) => {
      const newOrder = index + 1;
      console.log(`${newOrder}. ${item.title}`);
      console.log(`   ID: ${item._id}`);
      console.log(`   Order ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${item.order}`);
      console.log(`   Order ‡πÉ‡∏´‡∏°‡πà: ${newOrder}`);
      console.log(`   Max Score: ${item.maxScore}`);
      console.log('---');
    });
    
    console.log('\n' + '='.repeat(80));
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ database');
  }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö command line arguments
const args = process.argv.slice(2);
const command = args[0];

if (command === 'preview') {
  previewEvaluationItemOrder();
} else if (command === 'update') {
  updateEvaluationItemOrder();
} else {
  console.log('üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
  console.log('   node updateEvaluationItemOrder.js preview  - ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á order field ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï');
  console.log('   node updateEvaluationItemOrder.js update   - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï order field ‡∏à‡∏£‡∏¥‡∏á');
  console.log('\n‚ö†Ô∏è  ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á update ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô database');
}
