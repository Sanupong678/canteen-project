import axios from 'axios'

export default defineNuxtPlugin((nuxtApp) => {
  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ base URL ‡πÅ‡∏•‡∏∞ credentials
  const baseURL = process.env.NODE_ENV === 'production' 
    ? window.location.origin 
    : 'http://localhost:4000'
  
  axios.defaults.baseURL = baseURL
  axios.defaults.withCredentials = true

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° interceptor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏° Authorization header
  axios.interceptors.request.use(
    (config) => {
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° Authorization header ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ token ‡πÉ‡∏ô sessionStorage
      const token = sessionStorage.getItem('token')
      if (token) {
        config.headers.Authorization = `Bearer ${token}`
        console.log('üîç Adding Authorization header:', token.substring(0, 20) + '...')
      } else {
        console.log('‚ùå No token found in sessionStorage')
      }
      return config
    },
    (error) => {
      return Promise.reject(error)
    }
  )

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° interceptor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error
  axios.interceptors.response.use(
    (response) => response,
    (error) => {
      if (error.response?.status === 401) {
        // ‡∏ñ‡πâ‡∏≤ token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        sessionStorage.clear()
        
        // Clear cookies
        document.cookie = 'user_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;'
        document.cookie = 'admin_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;'
        
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ login ‡∏´‡∏£‡∏∑‡∏≠ welcome ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
        if (window.location.pathname !== '/login' && window.location.pathname !== '/') {
          window.location.href = '/login'
        }
      }
      return Promise.reject(error)
    }
  )

  return {
    provide: {
      axios: axios
    }
  }
}) 